/**
 * This class is generated by jOOQ
 */
package com.github.fge.grappa.debugger.h2.jooq.tables;

import com.github.fge.grappa.debugger.h2.jooq.Keys;
import com.github.fge.grappa.debugger.h2.jooq.Public;
import com.github.fge.grappa.debugger.h2.jooq.tables.records.MatchersRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Matchers extends org.jooq.impl.TableImpl<MatchersRecord> {

	private static final long serialVersionUID = 1778774793;

	/**
	 * The reference instance of <code>PUBLIC.MATCHERS</code>
	 */
	public static final Matchers MATCHERS = new Matchers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<MatchersRecord> getRecordType() {
		return MatchersRecord.class;
	}

	/**
	 * The column <code>PUBLIC.MATCHERS.ID</code>.
	 */
	public final org.jooq.TableField<MatchersRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.MATCHERS.CLASS_NAME</code>.
	 */
	public final org.jooq.TableField<MatchersRecord, java.lang.String> CLASS_NAME = createField("CLASS_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.MATCHERS.MATCHER_TYPE</code>.
	 */
	public final org.jooq.TableField<MatchersRecord, java.lang.String> MATCHER_TYPE = createField("MATCHER_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.MATCHERS.NAME</code>.
	 */
	public final org.jooq.TableField<MatchersRecord, java.lang.String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.MATCHERS</code> table reference
	 */
	public Matchers() {
		this("MATCHERS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.MATCHERS</code> table reference
	 */
	public Matchers(java.lang.String alias) {
		this(alias, Matchers.MATCHERS);
	}

	private Matchers(java.lang.String alias, org.jooq.Table<MatchersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Matchers(java.lang.String alias, org.jooq.Table<MatchersRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<MatchersRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_4;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<MatchersRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<MatchersRecord>>asList(
			Keys.CONSTRAINT_4);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Matchers as(java.lang.String alias) {
		return new Matchers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Matchers rename(java.lang.String name) {
		return new Matchers(name, null);
	}
}
