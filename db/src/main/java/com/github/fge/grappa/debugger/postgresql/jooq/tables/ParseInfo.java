/**
 * This class is generated by jOOQ
 */
package com.github.fge.grappa.debugger.postgresql.jooq.tables;

import com.github.fge.grappa.debugger.postgresql.jooq.Keys;
import com.github.fge.grappa.debugger.postgresql.jooq.Public;
import com.github.fge.grappa.debugger.postgresql.jooq.tables.records
	.ParseInfoRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParseInfo extends org.jooq.impl.TableImpl<ParseInfoRecord> {

	private static final long serialVersionUID = 105598560;

	/**
	 * The reference instance of <code>public.parse_info</code>
	 */
	public static final ParseInfo PARSE_INFO = new ParseInfo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<ParseInfoRecord> getRecordType() {
		return ParseInfoRecord.class;
	}

	/**
	 * The column <code>public.parse_info.id</code>.
	 */
	public final org.jooq.TableField<ParseInfoRecord, java.util.UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>public.parse_info.date</code>.
	 */
	public final org.jooq.TableField<ParseInfoRecord, java.sql.Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>public.parse_info.content</code>.
	 */
	public final org.jooq.TableField<ParseInfoRecord, java.lang.String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>public.parse_info</code> table reference
	 */
	public ParseInfo() {
		this("parse_info", null);
	}

	/**
	 * Create an aliased <code>public.parse_info</code> table reference
	 */
	public ParseInfo(java.lang.String alias) {
		this(alias, ParseInfo.PARSE_INFO);
	}

	private ParseInfo(java.lang.String alias, org.jooq.Table<ParseInfoRecord> aliased) {
		this(alias, aliased, null);
	}

	private ParseInfo(java.lang.String alias, org.jooq.Table<ParseInfoRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<ParseInfoRecord> getPrimaryKey() {
		return Keys.PARSE_INFO_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<ParseInfoRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<ParseInfoRecord>>asList(
			Keys.PARSE_INFO_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ParseInfo as(java.lang.String alias) {
		return new ParseInfo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ParseInfo rename(java.lang.String name) {
		return new ParseInfo(name, null);
	}
}
